"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[7e3],{3062:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"modules/refine_cpx","title":"RefineComplexVariants","description":"Refines and filters complex variants","source":"@site/docs/modules/refine_cpx.md","sourceDirName":"modules","slug":"/modules/refcv","permalink":"/gatk-sv/docs/modules/refcv","draft":false,"unlisted":false,"editUrl":"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/modules/refine_cpx.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"title":"RefineComplexVariants","description":"Refines and filters complex variants","sidebar_position":15,"slug":"refcv"},"sidebar":"tutorialSidebar","previous":{"title":"CleanVcf","permalink":"/gatk-sv/docs/modules/cvcf"},"next":{"title":"JoinRawCalls","permalink":"/gatk-sv/docs/modules/jrc"}}');var t=n(4848),c=n(8453),l=n(6473);const r={title:"RefineComplexVariants",description:"Refines and filters complex variants",sidebar_position:15,slug:"refcv"},d=void 0,a={},o=[{value:"Inputs",id:"inputs",level:3},{value:"<code>vcf</code>",id:"vcf",level:4},{value:"<code>prefix</code>",id:"prefix",level:4},{value:"<code>batch_name_list</code>",id:"batch_name_list",level:4},{value:"<code>batch_sample_lists</code>",id:"batch_sample_lists",level:4},{value:"<code>PE_metrics</code>",id:"pe_metrics",level:4},{value:"<code>Depth_DEL_beds</code>, <code>Depth_DUP_beds</code>",id:"depth_del_beds-depth_dup_beds",level:4},{value:"<code>n_per_split</code>",id:"n_per_split",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg>  <code>min_pe_cpx</code>",id:"optional--min_pe_cpx",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg>  <code>min_pe_ctx</code>",id:"optional--min_pe_ctx",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg> <code>use_hail</code>",id:"optional-use_hail",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg> <code>gcs_project</code>",id:"optional-gcs_project",level:4},{value:"Outputs",id:"outputs",level:3},{value:"<code>cpx_refined_vcf</code>",id:"cpx_refined_vcf",level:4},{value:"<code>cpx_evidences</code>",id:"cpx_evidences",level:4}];function h(e){const i={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",mermaid:"mermaid",p:"p",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://github.com/broadinstitute/gatk-sv/blob/main/wdl/RefineComplexVariants.wdl",children:"WDL source code"})}),"\n",(0,t.jsx)(i.p,{children:"Refines complex SVs and translocations and filters based on discordant read pair and read depth evidence reassessment."}),"\n",(0,t.jsx)(i.p,{children:"The following diagram illustrates the recommended invocation order:"}),"\n",(0,t.jsx)(i.mermaid,{value:"\nstateDiagram\n  direction LR\n  \n  classDef inModules stroke-width:0px,fill:#caf0f8,color:#00509d\n  classDef thisModule font-weight:bold,stroke-width:0px,fill:#ff9900,color:white\n  classDef outModules stroke-width:0px,fill:#caf0f8,color:#00509d\n\n  cvcf: CleanVcf\n  refcv: RefineComplexVariants\n  svc: SVConcordance\n  \n  cvcf --\x3e refcv\n  refcv --\x3e svc\n  \n  class refcv thisModule\n  class cvcf inModules\n  class svc outModules"}),"\n",(0,t.jsx)(i.h3,{id:"inputs",children:"Inputs"}),"\n",(0,t.jsx)(i.admonition,{type:"info",children:(0,t.jsxs)(i.p,{children:["All array inputs of batch data must match in order. For example, the order of the ",(0,t.jsx)(i.code,{children:"batch_name_list"})," array should match\nthat of ",(0,t.jsx)(i.code,{children:"batch_sample_lists"}),", ",(0,t.jsx)(i.code,{children:"PE_metrics"}),", etc."]})}),"\n",(0,t.jsx)(i.h4,{id:"vcf",children:(0,t.jsx)(i.code,{children:"vcf"})}),"\n",(0,t.jsxs)(i.p,{children:["Input vcf, generated in ",(0,t.jsx)(i.a,{href:"./cvcf#cleaned_vcf",children:"CleanVcf"}),"."]}),"\n",(0,t.jsx)(i.h4,{id:"prefix",children:(0,t.jsx)(i.code,{children:"prefix"})}),"\n",(0,t.jsx)(i.p,{children:"Prefix for output VCF, such as the cohort name. May be alphanumeric with underscores."}),"\n",(0,t.jsx)(i.h4,{id:"batch_name_list",children:(0,t.jsx)(i.code,{children:"batch_name_list"})}),"\n",(0,t.jsxs)(i.p,{children:["Array of batch names. These should be the same batch names used in ",(0,t.jsx)(i.a,{href:"./gbe#batch",children:"GatherBatchEvidence"}),"."]}),"\n",(0,t.jsx)(i.h4,{id:"batch_sample_lists",children:(0,t.jsx)(i.code,{children:"batch_sample_lists"})}),"\n",(0,t.jsxs)(i.p,{children:["Array of sample ID lists for all batches, generated in ",(0,t.jsx)(i.a,{href:"./fb#batch_samples_postoutlierexclusion",children:"FilterBatch"}),". Order must match ",(0,t.jsx)(i.a,{href:"#batch_name_list",children:"batch_name_list"}),"."]}),"\n",(0,t.jsx)(i.h4,{id:"pe_metrics",children:(0,t.jsx)(i.code,{children:"PE_metrics"})}),"\n",(0,t.jsxs)(i.p,{children:["Array of PE metrics files for all batches, generated in ",(0,t.jsx)(i.a,{href:"./gbe#merged_pe",children:"GatherBatchEvidence"}),". Order must match ",(0,t.jsx)(i.a,{href:"#batch_name_list",children:"batch_name_list"}),"."]}),"\n",(0,t.jsxs)(i.h4,{id:"depth_del_beds-depth_dup_beds",children:[(0,t.jsx)(i.code,{children:"Depth_DEL_beds"}),", ",(0,t.jsx)(i.code,{children:"Depth_DUP_beds"})]}),"\n",(0,t.jsxs)(i.p,{children:["Arrays of raw DEL and DUP depth calls for all batches, generated in ",(0,t.jsx)(i.a,{href:"./gbe#merged_dels-merged_dups",children:"GatherBatchEvidence"}),". Order must match ",(0,t.jsx)(i.a,{href:"#batch_name_list",children:"batch_name_list"}),"."]}),"\n",(0,t.jsx)(i.h4,{id:"n_per_split",children:(0,t.jsx)(i.code,{children:"n_per_split"})}),"\n",(0,t.jsx)(i.p,{children:"Shard size for parallel computations. Decreasing this parameter may help reduce run time."}),"\n",(0,t.jsxs)(i.h4,{id:"optional--min_pe_cpx",children:[(0,t.jsx)(l.$,{children:"Optional"}),"  ",(0,t.jsx)(i.code,{children:"min_pe_cpx"})]}),"\n",(0,t.jsxs)(i.p,{children:["Default: ",(0,t.jsx)(i.code,{children:"3"}),". Minimum PE read count for complex variants (CPX)."]}),"\n",(0,t.jsxs)(i.h4,{id:"optional--min_pe_ctx",children:[(0,t.jsx)(l.$,{children:"Optional"}),"  ",(0,t.jsx)(i.code,{children:"min_pe_ctx"})]}),"\n",(0,t.jsxs)(i.p,{children:["Default: ",(0,t.jsx)(i.code,{children:"3"}),". Minimum PE read count for translocations (CTX)."]}),"\n",(0,t.jsxs)(i.h4,{id:"optional-use_hail",children:[(0,t.jsx)(l.$,{children:"Optional"})," ",(0,t.jsx)(i.code,{children:"use_hail"})]}),"\n",(0,t.jsxs)(i.p,{children:["Default: ",(0,t.jsx)(i.code,{children:"false"}),". Use Hail for VCF concatenation. This should only be used for projects with over 50k samples. If enabled, the\n",(0,t.jsx)(i.a,{href:"#optional-gcs_project",children:"gcs_project"})," must also be provided. Does not work on Terra."]}),"\n",(0,t.jsxs)(i.h4,{id:"optional-gcs_project",children:[(0,t.jsx)(l.$,{children:"Optional"})," ",(0,t.jsx)(i.code,{children:"gcs_project"})]}),"\n",(0,t.jsxs)(i.p,{children:["Google Cloud project ID. Required only if enabling ",(0,t.jsx)(i.a,{href:"#optional-use_hail",children:"use_hail"}),"."]}),"\n",(0,t.jsx)(i.h3,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsx)(i.h4,{id:"cpx_refined_vcf",children:(0,t.jsx)(i.code,{children:"cpx_refined_vcf"})}),"\n",(0,t.jsx)(i.p,{children:"Output VCF."}),"\n",(0,t.jsx)(i.h4,{id:"cpx_evidences",children:(0,t.jsx)(i.code,{children:"cpx_evidences"})}),"\n",(0,t.jsx)(i.p,{children:"Supplementary output table of complex variant evidence."})]})}function p(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},6473:(e,i,n)=>{n.d(i,{$:()=>t});var s=n(4848);const t=e=>{let{children:i}=e;return(0,s.jsx)("span",{style:{backgroundColor:"var(--highlight-optional-arg-background-color)",borderRadius:"2px",color:"var(--highlight-optional-arg-text-color)",padding:"0.2rem"},children:i})}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>r});var s=n(6540);const t={},c=s.createContext(t);function l(e){const i=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(c.Provider,{value:i},e.children)}}}]);