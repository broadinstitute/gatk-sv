"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[8278],{7455:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"modules/generate_batch_metrics","title":"GenerateBatchMetrics","description":"Generate Batch Metrics","source":"@site/docs/modules/generate_batch_metrics.md","sourceDirName":"modules","slug":"/modules/gbm","permalink":"/gatk-sv/docs/modules/gbm","draft":false,"unlisted":false,"editUrl":"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/modules/generate_batch_metrics.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"GenerateBatchMetrics","description":"Generate Batch Metrics","sidebar_position":6,"slug":"gbm"},"sidebar":"tutorialSidebar","previous":{"title":"ClusterBatch","permalink":"/gatk-sv/docs/modules/cb"},"next":{"title":"FilterBatch","permalink":"/gatk-sv/docs/modules/fb"}}');var c=t(4848),n=t(8453);const r={title:"GenerateBatchMetrics",description:"Generate Batch Metrics",sidebar_position:6,slug:"gbm"},d=void 0,l={},a=[{value:"Inputs",id:"inputs",level:2},{value:"<code>batch</code>",id:"batch",level:4},{value:"<code>*_vcf</code>",id:"_vcf",level:4},{value:"<code>baf_metrics</code>",id:"baf_metrics",level:4},{value:"<code>discfile</code>",id:"discfile",level:4},{value:"<code>coveragefile</code>",id:"coveragefile",level:4},{value:"<code>splitfile</code>",id:"splitfile",level:4},{value:"<code>medianfile</code>",id:"medianfile",level:4},{value:"<code>*_split_size</code>",id:"_split_size",level:4},{value:"<code>ped_file</code>",id:"ped_file",level:4},{value:"Outputs",id:"outputs",level:2},{value:"<code>metrics</code>",id:"metrics",level:4},{value:"<code>metrics_common</code>",id:"metrics_common",level:4}];function o(e){const i={a:"a",code:"code",h2:"h2",h4:"h4",mermaid:"mermaid",p:"p",...(0,n.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(i.p,{children:(0,c.jsx)(i.a,{href:"https://github.com/broadinstitute/gatk-sv/blob/main/wdl/GenerateBatchMetrics.wdl",children:"WDL source code"})}),"\n",(0,c.jsxs)(i.p,{children:["Analyzes variants for RD, BAF, PE, and SR evidence and creates a table of metrics containing raw and statistical\nmetrics. These results are used to assess variant quality in ",(0,c.jsx)(i.code,{children:"FilterBatch"})," and for SR-based breakpoint refinement."]}),"\n",(0,c.jsx)(i.p,{children:"Modified tests are applied to common variants (carrier frequency at least 50%) and results are emitted in a separate table."}),"\n",(0,c.jsx)(i.p,{children:"The following diagram illustrates the recommended invocation order:"}),"\n",(0,c.jsx)(i.mermaid,{value:"\nstateDiagram\n  direction LR\n  \n  classDef inModules stroke-width:0px,fill:#caf0f8,color:#00509d\n  classDef thisModule font-weight:bold,stroke-width:0px,fill:#ff9900,color:white\n  classDef outModules stroke-width:0px,fill:#caf0f8,color:#00509d\n\n  cb: ClusterBatch\n  gbm: GenerateBatchMetrics\n  fb: FilterBatch\n  cb --\x3e gbm\n  gbm --\x3e fb\n  \n  class gbm thisModule\n  class cb inModules\n  class fb outModules"}),"\n",(0,c.jsx)(i.h2,{id:"inputs",children:"Inputs"}),"\n",(0,c.jsx)(i.h4,{id:"batch",children:(0,c.jsx)(i.code,{children:"batch"})}),"\n",(0,c.jsxs)(i.p,{children:["An identifier for the batch. Should match the name used in ",(0,c.jsx)(i.a,{href:"./gbe#batch",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"_vcf",children:(0,c.jsx)(i.code,{children:"*_vcf"})}),"\n",(0,c.jsxs)(i.p,{children:["Clustered VCFs from ",(0,c.jsx)(i.a,{href:"./cb#clustered__vcf",children:"ClusterBatch"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"baf_metrics",children:(0,c.jsx)(i.code,{children:"baf_metrics"})}),"\n",(0,c.jsxs)(i.p,{children:["Merged BAF evidence file from ",(0,c.jsx)(i.a,{href:"./gbe#merged_baf",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"discfile",children:(0,c.jsx)(i.code,{children:"discfile"})}),"\n",(0,c.jsxs)(i.p,{children:["Merged PE evidence file from ",(0,c.jsx)(i.a,{href:"./gbe#merged_pe",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"coveragefile",children:(0,c.jsx)(i.code,{children:"coveragefile"})}),"\n",(0,c.jsxs)(i.p,{children:["Merged RD evidence file from ",(0,c.jsx)(i.a,{href:"./gbe#merged_bincov",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"splitfile",children:(0,c.jsx)(i.code,{children:"splitfile"})}),"\n",(0,c.jsxs)(i.p,{children:["Merged SR evidence file from ",(0,c.jsx)(i.a,{href:"./gbe#merged_sr",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"medianfile",children:(0,c.jsx)(i.code,{children:"medianfile"})}),"\n",(0,c.jsxs)(i.p,{children:["Merged median coverage table from ",(0,c.jsx)(i.a,{href:"./gbe#median_cov",children:"GatherBatchEvidence"}),"."]}),"\n",(0,c.jsx)(i.h4,{id:"_split_size",children:(0,c.jsx)(i.code,{children:"*_split_size"})}),"\n",(0,c.jsx)(i.p,{children:"Variants per shard for each evidence testing subworkflow. Reduce defaults to increase parallelism if the workflow is\ntoo slow."}),"\n",(0,c.jsx)(i.h4,{id:"ped_file",children:(0,c.jsx)(i.code,{children:"ped_file"})}),"\n",(0,c.jsxs)(i.p,{children:["Family structures and sex assignments determined in ",(0,c.jsx)(i.a,{href:"./eqc",children:"EvidenceQC"}),". See ",(0,c.jsx)(i.a,{href:"/docs/gs/inputs#ped-format",children:"PED file format"}),"."]}),"\n",(0,c.jsx)(i.h2,{id:"outputs",children:"Outputs"}),"\n",(0,c.jsx)(i.h4,{id:"metrics",children:(0,c.jsx)(i.code,{children:"metrics"})}),"\n",(0,c.jsx)(i.p,{children:"TSV of variant metrics (excluding common variants)."}),"\n",(0,c.jsx)(i.h4,{id:"metrics_common",children:(0,c.jsx)(i.code,{children:"metrics_common"})}),"\n",(0,c.jsx)(i.p,{children:"TSV of common variant metrics (>50% carrier frequency)."})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>d});var s=t(6540);const c={},n=s.createContext(c);function r(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);