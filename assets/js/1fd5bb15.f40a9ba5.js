"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[3309],{3613:(e,i,d)=>{d.r(i),d.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"modules/gather_batch_evidence","title":"GatherBatchEvidence","description":"Gather Batch Evidence","source":"@site/docs/modules/gather_batch_evidence.md","sourceDirName":"modules","slug":"/modules/gbe","permalink":"/gatk-sv/docs/modules/gbe","draft":false,"unlisted":false,"editUrl":"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/modules/gather_batch_evidence.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"title":"GatherBatchEvidence","description":"Gather Batch Evidence","sidebar_position":4,"slug":"gbe"},"sidebar":"tutorialSidebar","previous":{"title":"TrainGCNV","permalink":"/gatk-sv/docs/modules/gcnv"},"next":{"title":"ClusterBatch","permalink":"/gatk-sv/docs/modules/cb"}}');var l=d(4848),s=d(8453),c=d(6473);const t={title:"GatherBatchEvidence",description:"Gather Batch Evidence",sidebar_position:4,slug:"gbe"},r=void 0,a={},o=[{value:"Inputs",id:"inputs",level:2},{value:"<code>batch</code>",id:"batch",level:4},{value:"<code>samples</code>",id:"samples",level:4},{value:"<code>ped_file</code>",id:"ped_file",level:4},{value:"<code>counts</code>",id:"counts",level:4},{value:"<code>PE_files</code>",id:"pe_files",level:4},{value:"<code>SR_files</code>",id:"sr_files",level:4},{value:"<code>SD_files</code>",id:"sd_files",level:4},{value:"<code>*_vcfs</code>",id:"_vcfs",level:4},{value:"<code>run_matrix_qc</code>",id:"run_matrix_qc",level:4},{value:"<code>contig_ploidy_model_tar</code>",id:"contig_ploidy_model_tar",level:4},{value:"<code>gcnv_model_tars</code>",id:"gcnv_model_tars",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg> <code>rename_samples</code>",id:"optional-rename_samples",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg> <code>run_ploidy</code>",id:"optional-run_ploidy",level:4},{value:"Outputs",id:"outputs",level:2},{value:"<code>merged_BAF</code>",id:"merged_baf",level:4},{value:"<code>merged_SR</code>",id:"merged_sr",level:4},{value:"<code>merged_PE</code>",id:"merged_pe",level:4},{value:"<code>merged_bincov</code>",id:"merged_bincov",level:4},{value:"<code>merged_dels</code>, <code>merged_dups</code>",id:"merged_dels-merged_dups",level:4},{value:"<code>median_cov</code>",id:"median_cov",level:4},{value:"<code>std_*_vcf_tar</code>",id:"std__vcf_tar",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg>  <code>batch_ploidy_*</code>",id:"optional--batch_ploidy_",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg>  <code>*_stats</code>, <code>Matrix_QC_plot</code>",id:"optional--_stats-matrix_qc_plot",level:4},{value:"<HighlightOptionalArg>Optional</HighlightOptionalArg>  <code>manta_tloc</code>",id:"optional--manta_tloc",level:4}];function h(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",mermaid:"mermaid",p:"p",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.p,{children:(0,l.jsx)(i.a,{href:"https://github.com/broadinstitute/gatk-sv/blob/main/wdl/GatherBatchEvidence.wdl",children:"WDL source code"})}),"\n",(0,l.jsxs)(i.p,{children:["Runs CNV callers (",(0,l.jsx)(i.a,{href:"https://academic.oup.com/nar/article/40/9/e69/1136601",children:"cn.MOPS"}),", ",(0,l.jsx)(i.a,{href:"https://github.com/broadinstitute/gatk",children:"GATK-gCNV"}),")\nand combines single-sample raw evidence into batched files."]}),"\n",(0,l.jsx)(i.p,{children:"The following diagram illustrates the recommended invocation order:"}),"\n",(0,l.jsx)(i.mermaid,{value:"\nstateDiagram\n  direction LR\n  \n  classDef inModules stroke-width:0px,fill:#caf0f8,color:#00509d\n  classDef thisModule font-weight:bold,stroke-width:0px,fill:#ff9900,color:white\n  classDef outModules stroke-width:0px,fill:#caf0f8,color:#00509d\n\n  gbe: GatherBatchEvidence\n  t: TrainGCNV\n  cb: ClusterBatch\n  t --\x3e gbe\n  gbe --\x3e cb\n  \n  class gbe thisModule\n  class t inModules\n  class cb outModules"}),"\n",(0,l.jsx)(i.h2,{id:"inputs",children:"Inputs"}),"\n",(0,l.jsx)(i.admonition,{type:"info",children:(0,l.jsxs)(i.p,{children:["All array inputs of sample data must match in order. For example, the order of the ",(0,l.jsx)(i.code,{children:"samples"})," array should match that of\n",(0,l.jsx)(i.code,{children:"counts"}),", ",(0,l.jsx)(i.code,{children:"PE_files"}),", etc."]})}),"\n",(0,l.jsx)(i.h4,{id:"batch",children:(0,l.jsx)(i.code,{children:"batch"})}),"\n",(0,l.jsx)(i.p,{children:"An identifier for the batch; may only be alphanumeric with underscores."}),"\n",(0,l.jsx)(i.h4,{id:"samples",children:(0,l.jsx)(i.code,{children:"samples"})}),"\n",(0,l.jsxs)(i.p,{children:["Sample IDs. Must match the sample IDs used in ",(0,l.jsx)(i.a,{href:"./gse#sample_id",children:"GatherSampleEvidence"})," unless ",(0,l.jsx)(i.code,{children:"rename_samples"})," is enabled, in\nwhich case sample IDs will be overwritten. See ",(0,l.jsx)(i.a,{href:"/docs/gs/inputs#sampleids",children:"sample ID requirements"})," for specifications\nof allowable sample IDs."]}),"\n",(0,l.jsx)(i.h4,{id:"ped_file",children:(0,l.jsx)(i.code,{children:"ped_file"})}),"\n",(0,l.jsxs)(i.p,{children:["Family structures and sex assignments determined in ",(0,l.jsx)(i.a,{href:"./eqc",children:"EvidenceQC"}),". See ",(0,l.jsx)(i.a,{href:"/docs/gs/inputs#ped-format",children:"PED file format"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"counts",children:(0,l.jsx)(i.code,{children:"counts"})}),"\n",(0,l.jsxs)(i.p,{children:["Binned read count files (",(0,l.jsx)(i.code,{children:"*.rd.txt.gz"}),") generated in ",(0,l.jsx)(i.a,{href:"./gse#coverage-counts",children:"GatherSampleEvidence"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"pe_files",children:(0,l.jsx)(i.code,{children:"PE_files"})}),"\n",(0,l.jsxs)(i.p,{children:["Discordant pair evidence files (",(0,l.jsx)(i.code,{children:"*.pe.txt.gz"}),") generated in ",(0,l.jsx)(i.a,{href:"./gse#pesr-disc",children:"GatherSampleEvidence"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"sr_files",children:(0,l.jsx)(i.code,{children:"SR_files"})}),"\n",(0,l.jsxs)(i.p,{children:["Split read evidence files (",(0,l.jsx)(i.code,{children:"*.sr.txt.gz"}),") generated in ",(0,l.jsx)(i.a,{href:"./gse#pesr-split",children:"GatherSampleEvidence"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"sd_files",children:(0,l.jsx)(i.code,{children:"SD_files"})}),"\n",(0,l.jsxs)(i.p,{children:["Site depth files (",(0,l.jsx)(i.code,{children:"*.sd.txt.gz"}),") generated in ",(0,l.jsx)(i.a,{href:"./gse#pesr-sd",children:"GatherSampleEvidence"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"_vcfs",children:(0,l.jsx)(i.code,{children:"*_vcfs"})}),"\n",(0,l.jsxs)(i.p,{children:["Raw caller VCFs generated in ",(0,l.jsx)(i.a,{href:"./gse#outputs",children:"GatherSampleEvidence"}),". Callers may be omitted if they were not run."]}),"\n",(0,l.jsx)(i.h4,{id:"run_matrix_qc",children:(0,l.jsx)(i.code,{children:"run_matrix_qc"})}),"\n",(0,l.jsx)(i.p,{children:"Enables running QC tasks."}),"\n",(0,l.jsx)(i.h4,{id:"contig_ploidy_model_tar",children:(0,l.jsx)(i.code,{children:"contig_ploidy_model_tar"})}),"\n",(0,l.jsxs)(i.p,{children:["Contig ploidy model tarball generated in ",(0,l.jsx)(i.a,{href:"./gcnv#cohort_contig_ploidy_model_tar",children:"TrainGCNV"}),"."]}),"\n",(0,l.jsx)(i.h4,{id:"gcnv_model_tars",children:(0,l.jsx)(i.code,{children:"gcnv_model_tars"})}),"\n",(0,l.jsxs)(i.p,{children:["CNV model tarball generated in ",(0,l.jsx)(i.a,{href:"./gcnv#cohort_gcnv_model_tars",children:"TrainGCNV"}),"."]}),"\n",(0,l.jsxs)(i.h4,{id:"optional-rename_samples",children:[(0,l.jsx)(c.$,{children:"Optional"})," ",(0,l.jsx)(i.code,{children:"rename_samples"})]}),"\n",(0,l.jsxs)(i.p,{children:["Default: ",(0,l.jsx)(i.code,{children:"false"}),". Overwrite sample IDs with the ",(0,l.jsx)(i.a,{href:"#samples",children:"samples"})," input."]}),"\n",(0,l.jsxs)(i.h4,{id:"optional-run_ploidy",children:[(0,l.jsx)(c.$,{children:"Optional"})," ",(0,l.jsx)(i.code,{children:"run_ploidy"})]}),"\n",(0,l.jsxs)(i.p,{children:["Default: ",(0,l.jsx)(i.code,{children:"false"}),". Runs ploidy estimation. Note this calls the same method used in ",(0,l.jsx)(i.a,{href:"./eqc",children:"EvidenceQc"}),"."]}),"\n",(0,l.jsx)(i.h2,{id:"outputs",children:"Outputs"}),"\n",(0,l.jsx)(i.h4,{id:"merged_baf",children:(0,l.jsx)(i.code,{children:"merged_BAF"})}),"\n",(0,l.jsxs)(i.p,{children:["Batch B-allele frequencies file (",(0,l.jsx)(i.code,{children:".baf.txt.gz"}),") derived from site depth evidence."]}),"\n",(0,l.jsx)(i.h4,{id:"merged_sr",children:(0,l.jsx)(i.code,{children:"merged_SR"})}),"\n",(0,l.jsxs)(i.p,{children:["Batch split read evidence file (",(0,l.jsx)(i.code,{children:".sr.txt.gz"}),")."]}),"\n",(0,l.jsx)(i.h4,{id:"merged_pe",children:(0,l.jsx)(i.code,{children:"merged_PE"})}),"\n",(0,l.jsxs)(i.p,{children:["Batch paired-end evidence file (",(0,l.jsx)(i.code,{children:".pe.txt.gz"}),")."]}),"\n",(0,l.jsx)(i.h4,{id:"merged_bincov",children:(0,l.jsx)(i.code,{children:"merged_bincov"})}),"\n",(0,l.jsxs)(i.p,{children:["Batch binned read counts file (",(0,l.jsx)(i.code,{children:".rd.txt.gz"}),")."]}),"\n",(0,l.jsxs)(i.h4,{id:"merged_dels-merged_dups",children:[(0,l.jsx)(i.code,{children:"merged_dels"}),", ",(0,l.jsx)(i.code,{children:"merged_dups"})]}),"\n",(0,l.jsxs)(i.p,{children:["Batch CNV calls (",(0,l.jsx)(i.code,{children:".bed.gz"}),")."]}),"\n",(0,l.jsx)(i.h4,{id:"median_cov",children:(0,l.jsx)(i.code,{children:"median_cov"})}),"\n",(0,l.jsx)(i.p,{children:"Median coverage table."}),"\n",(0,l.jsx)(i.h4,{id:"std__vcf_tar",children:(0,l.jsx)(i.code,{children:"std_*_vcf_tar"})}),"\n",(0,l.jsx)(i.p,{children:"Tarballs containing per-sample raw caller VCFs in standardized formats. This will be ommitted for any callers not\nprovided in the inputs."}),"\n",(0,l.jsxs)(i.h4,{id:"optional--batch_ploidy_",children:[(0,l.jsx)(c.$,{children:"Optional"}),"  ",(0,l.jsx)(i.code,{children:"batch_ploidy_*"})]}),"\n",(0,l.jsxs)(i.p,{children:["Ploidy analysis files. Enabled with ",(0,l.jsx)(i.a,{href:"#optional-run_ploidy",children:"run_ploidy"}),"."]}),"\n",(0,l.jsxs)(i.h4,{id:"optional--_stats-matrix_qc_plot",children:[(0,l.jsx)(c.$,{children:"Optional"}),"  ",(0,l.jsx)(i.code,{children:"*_stats"}),", ",(0,l.jsx)(i.code,{children:"Matrix_QC_plot"})]}),"\n",(0,l.jsxs)(i.p,{children:["QC files. Enabled with ",(0,l.jsx)(i.a,{href:"#run_matrix_qc",children:"run_matrix_qc"}),"."]}),"\n",(0,l.jsxs)(i.h4,{id:"optional--manta_tloc",children:[(0,l.jsx)(c.$,{children:"Optional"}),"  ",(0,l.jsx)(i.code,{children:"manta_tloc"})]}),"\n",(0,l.jsx)(i.p,{children:"Supplemental evidence for translocation variants. These records are hard filtered from the main call set but may be of\ninterest to users investigating reciprocal translocations and other complex events."})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},6473:(e,i,d)=>{d.d(i,{$:()=>l});var n=d(4848);const l=e=>{let{children:i}=e;return(0,n.jsx)("span",{style:{backgroundColor:"var(--highlight-optional-arg-background-color)",borderRadius:"2px",color:"var(--highlight-optional-arg-text-color)",padding:"0.2rem"},children:i})}},8453:(e,i,d)=>{d.d(i,{R:()=>c,x:()=>t});var n=d(6540);const l={},s=n.createContext(l);function c(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);