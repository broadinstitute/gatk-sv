"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[8350],{2450:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"gs/sv_callers","title":"SV/CNV callers","description":"Summary of SV discovery tools","source":"@site/docs/gs/sv_callers.md","sourceDirName":"gs","slug":"/gs/sv_callers","permalink":"/gatk-sv/docs/gs/sv_callers","draft":false,"unlisted":false,"editUrl":"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/gs/sv_callers.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"SV/CNV callers","description":"Summary of SV discovery tools","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Input data","permalink":"/gatk-sv/docs/gs/inputs"},"next":{"title":"Docker images","permalink":"/gatk-sv/docs/gs/dockers"}}');var o=s(4848),r=s(8453);const i={title:"SV/CNV callers",description:"Summary of SV discovery tools",sidebar_position:3},l=void 0,a={},c=[];function d(e){const t={a:"a",admonition:"admonition",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"GATK-SV uses an ensemble of SV discovery tools to produce a raw call set and then integrates, filters, refines,\nand annotates the calls from these tools to produce a final call set."}),"\n",(0,o.jsx)(t.p,{children:'The SV calling tools, sometimes referred to as "PE/SR" tools, include:'}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/Illumina/manta",children:"Manta"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/zeeev/wham",children:"Wham"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/GeneDx/scramble",children:"Scramble"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Depth-based calling of copy number variants (CNVs) is performed by two tools:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://github.com/broadinstitute/gatk",children:"GATK-gCNV"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://bioconductor.org/packages/release/bioc/html/cn.mops.html",children:"cn.MOPS"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"While it is possible to omit individual tools from the pipeline, it is strongly recommended to use the default\nconfiguration that runs all of them."}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"As of 2024, most published joint call sets generated with GATK-SV used the tool MELT, a state-of-the-art mobile element\ninsertion (MEI) detector, instead of Scramble. Due to licensing restrictions, we cannot provide a public docker image\nor reference panel VCFs for this algorithm. The version of the pipeline configured in the Terra workspaces does not run\nMELT or include MELT calls for the reference panel. However, the Scramble tool has replaced MELT as an MEI caller and\nshould provide similar performance."})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var n=s(6540);const o={},r=n.createContext(o);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);