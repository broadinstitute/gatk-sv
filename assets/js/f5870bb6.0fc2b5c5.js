"use strict";(self.webpackChunkGATK_SV=self.webpackChunkGATK_SV||[]).push([[3253],{6448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"advanced/cromwell/quick_start","title":"Run","description":"Running GATK-SV on Cromwell","source":"@site/docs/advanced/cromwell/quick_start.md","sourceDirName":"advanced/cromwell","slug":"/advanced/cromwell/qs","permalink":"/gatk-sv/docs/advanced/cromwell/qs","draft":false,"unlisted":false,"editUrl":"https://github.com/broadinstitute/gatk-sv/tree/master/website/docs/advanced/cromwell/quick_start.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Run","description":"Running GATK-SV on Cromwell","sidebar_position":1,"slug":"./qs"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/gatk-sv/docs/advanced/cromwell/overview"},"next":{"title":"Docker builds","permalink":"/gatk-sv/docs/category/docker-builds"}}');var s=t(4848),l=t(8453);const r={title:"Run",description:"Running GATK-SV on Cromwell",sidebar_position:1,slug:"./qs"},o="Quick Start on Cromwell",d={},c=[{value:"Environment Setup",id:"environment-setup",level:3},{value:"Build Inputs",id:"build-inputs",level:3},{value:"MELT",id:"melt",level:3},{value:"Execution",id:"execution",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quick-start-on-cromwell",children:"Quick Start on Cromwell"})}),"\n",(0,s.jsx)(n.p,{children:"This section walks you through the steps of running pipeline using\ndemo data on a managed Cromwell server."}),"\n",(0,s.jsx)(n.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"A running instance of a Cromwell server."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Install Cromshell and configure it to connect with the Cromwell server you are using.\nYou may refer to the documentation on ",(0,s.jsx)(n.a,{href:"https://github.com/broadinstitute/cromshell",children:"Cromshell README"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"build-inputs",children:"Build Inputs"}),"\n",(0,s.jsxs)(n.p,{children:["We provide options for building example inputs that you may use as a reference\nto configure a Terra workspace or Cromwell submissions (advanced) with your own data.\nPlease refer to ",(0,s.jsx)(n.a,{href:"/docs/advanced/build_inputs",children:"this page"})," for instructions on how to build these inputs."]}),"\n",(0,s.jsx)(n.h3,{id:"melt",children:"MELT"}),"\n",(0,s.jsxs)(n.p,{children:["Important: The example input files contain MELT inputs that are NOT public\n(see ",(0,s.jsx)(n.a,{href:"https://github.com/broadinstitute/gatk-sv#requirements",children:"Requirements"}),"). These include:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GATKSVPipelineSingleSample.melt_docker"})," and ",(0,s.jsx)(n.code,{children:"GATKSVPipelineBatch.melt_docker"})," - MELT docker URI\n(see ",(0,s.jsx)(n.a,{href:"https://github.com/talkowski-lab/gatk-sv-v1/blob/master/dockerfiles/README.md",children:"Docker readme"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GATKSVPipelineSingleSample.ref_std_melt_vcfs"})," - Standardized MELT VCFs (",(0,s.jsx)(n.a,{href:"/docs/modules/gbe",children:"GatherBatchEvidence"}),")\nThe input values are provided only as an example and are not publicly accessible."]}),"\n",(0,s.jsxs)(n.li,{children:["In order to include MELT, these values must be provided by the user. MELT can be\ndisabled by deleting these inputs and setting ",(0,s.jsx)(n.code,{children:"GATKSVPipelineBatch.use_melt"})," to false."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"execution",children:"Execution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"> mkdir gatksv_run && cd gatksv_run\n> mkdir wdl && cd wdl\n> cp $GATK_SV_ROOT/wdl/*.wdl .\n> zip dep.zip *.wdl\n> cd ..\n> bash scripts/inputs/build_default_inputs.sh -d $GATK_SV_ROOT\n> cp $GATK_SV_ROOT/inputs/build/ref_panel_1kg/test/GATKSVPipelineBatch/GATKSVPipelineBatch.json GATKSVPipelineBatch.my_run.json\n> cromshell submit wdl/GATKSVPipelineBatch.wdl GATKSVPipelineBatch.my_run.json cromwell_config.json wdl/dep.zip\n"})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"cromwell_config.json"})," is a Cromwell\n",(0,s.jsx)(n.a,{href:"https://cromwell.readthedocs.io/en/stable/wf_options/Overview/",children:"workflow options file"}),".\nNote users will need to re-populate batch/sample-specific parameters (e.g. BAMs and sample IDs)."]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},l=i.createContext(s);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);