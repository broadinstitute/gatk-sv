#!/bin/bash

# Performs QC on a non-RD metadata matrix (e.g. PE/SR/RD) generated by module 00

set -e

#Usage statement
usage(){
cat <<EOF

usage: nonRD_matrix_QC.sh [-h] [-d DISTANCE] MATRIX GENOME OUTFILE

Performs QC on a PE, SR, or BAF metadata matrix

Positional arguments:
  MATRIX   full path to matrix to be QCed
  GENOME   full path to genome file for evaluation (see BEDTools documentation)
  OUTFILE  full path to desired QC output file

Optional arguments:
  -h  HELP      Show this help message and exit
  -d  DISTANCE  Distance from q-terminus of each chromosome to evaluate (default: 1000000) 

EOF
}

#Parse arguments
DISTANCE=1000000
while getopts ":d:h" opt; do
  case "$opt" in
    h)
      usage
      exit 0
      ;;
    d)
      DISTANCE=${OPTARG}
      ;;
  esac
done
shift $(( ${OPTIND} - 1))
MATRIX=$1
GENOME=$2
OUTFILE=$3

#Check arguments
if ! [ -s ${MATRIX} ]; then
  echo -e "\nERROR: specified MATRIX file does not exist or is empty. Exiting."
  usage
  exit 1
fi
if ! [ -s ${GENOME} ]; then
  echo -e "\nERROR: specified GENOME file does not exist or is empty. Exiting."
  usage
  exit 1
fi
if [ ${DISTANCE} -lt 1 ]; then
  echo -e "\nERROR: DISTANCE must be an integer greater than zero. Exiting."
  usage
  exit 1
fi

#Write header for outfile
echo -e "#ID\tchromosome\tlines_in_tail" > ${OUTFILE}

#Iterate over contigs & write results to outfile
while read contig end; do
  #Get start position of window to check
  start=$(( ${end} - ${DISTANCE} ))
  if [ ${start} -lt 1 ]; then
    start=1
  fi

  #Tabix tail of contig & tabulate entries
  tabix ${MATRIX} "${contig}:${start}-${end}" | \
  awk -v FS="\t" '{ print $NF }' | sort | uniq -c | \
  awk -v OFS="\t" -v contig=${contig} '{ print $2, contig, $1 }'

done < <( fgrep -v "#" ${GENOME} ) | sort -k1,1 -k2,2V >> ${OUTFILE}

