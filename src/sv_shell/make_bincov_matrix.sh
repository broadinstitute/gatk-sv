#!/bin/bash

set -Eeuo pipefail

# TODO: test this
#if [[ "${1:-}" == "--verbose" ]]; then
#  echo "Verbose mode enabled."
#  set -x
#fi

function getJavaMem() {
  # get JVM memory in MiB by getting total memory from /proc/meminfo
  # and multiplying by java_mem_fraction

  local mem_fraction=${java_mem_fraction:=0.85}
  cat /proc/meminfo | \
    awk -v MEM_FIELD="$1" -v frac="${mem_fraction}" '{
      f[substr($1, 1, length($1)-1)] = $2
    } END {
      printf "%dM", f[MEM_FIELD] * frac / 1024
    }'
}
JVM_MAX_MEM=$(getJavaMem MemTotal)
echo "JVM memory: $JVM_MAX_MEM"

inputs_json=${1}
output_dir=${2:-""}

inputs_json="$(realpath ${inputs_json})"

if [ -z "${output_dir}" ]; then
  output_dir=$(mktemp -d output_make_bincov_matrix_XXXXXXXX)
else
  mkdir -p "${output_dir}"
fi
output_dir="$(realpath ${output_dir})"

working_dir=$(mktemp -d wd_make_bincov_matrix_XXXXXXXX)
working_dir="$(realpath ${working_dir})"
cd "${working_dir}"

batch_name=$(jq -r ".batch" "${inputs_json}")
merged_bincov="$(realpath ${batch_name}.RD.txt.gz)"
merged_bincov_idx="$(realpath ${merged_bincov}.tbi)" # this file is auto-generated by PrintSVEvidence

readarray -t count_files < <(jq -r '.count_files[]' "${inputs_json}")

# These files need to have the `.list` extension (gatk requirement)
evidence_files_list="evidence_files.list"
samples_filename="samples.list"

reference_dict=$(jq -r ".reference_dict" "${inputs_json}")

# TODO: not sure if/why you need the following inputs
binsize=$(jq -r ".binsize" "${inputs_json}")
bincov_matrix=$(jq -r ".bincov_matrix" "${inputs_json}")

jq -r ".samples[]" "${inputs_json}" >> "${samples_filename}"
# TODO: adding the folloiwng results in getting values for all the samples in the bincov matrix,
#  and the output is generates does not match the current output (it mostly contains -1
#  for all the columns except the sample in samples list).
#jq -r ".bincov_matrix_samples[]" "${inputs_json}" >> "${samples_filename}"

for filename in "${count_files[@]}"; do
  case "${filename}" in
    *.counts.tsv.gz)
      sample_id="${filename%.counts.tsv.gz}"
      output_filename="$(realpath ${sample_id}.rd.txt.gz)"

      java "-Xmx${JVM_MAX_MEM}" -jar /opt/gatk.jar \
        ConvertCountsToDepthFile \
        --counts-filename "${filename}" \
        --output "${output_filename}"

      echo "${output_filename}" >> "${evidence_files_list}"
      ;;

    *.rd.tsv.gz)
      echo filename >> "${evidence_files_list}"
      ;;

    *)
      echo "File extension does not match *.counts.tsv.gz or *.rd.tsv.gz."
      ;;
  esac
done

java "-Xmx${JVM_MAX_MEM}" -jar /opt/gatk.jar \
  PrintSVEvidence \
    -F "${evidence_files_list}" \
    --sample-names "${samples_filename}" \
    --sequence-dictionary "${reference_dict}" \
    --output "${merged_bincov}"
