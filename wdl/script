#!/bin/bash

cd /cromwell_root
tmpDir=$(mkdir -p "/cromwell_root/tmp.b69b4b96" && echo "/cromwell_root/tmp.b69b4b96")
chmod 777 "$tmpDir"
export _JAVA_OPTIONS=-Djava.io.tmpdir="$tmpDir"
export TMPDIR="$tmpDir"
export HOME="$HOME"
(
cd /cromwell_root
touch /cromwell_root/monitoring.log
chmod u+x /cromwell_root/monitoring.sh
/cromwell_root/monitoring.sh > /cromwell_root/monitoring.log &
)
outc854463e="${tmpDir}/out.$$" errc854463e="${tmpDir}/err.$$"
mkfifo "$outc854463e" "$errc854463e"
trap 'rm "$outc854463e" "$errc854463e"' EXIT
tee '/cromwell_root/stdout' < "$outc854463e" &
tee '/cromwell_root/stderr' < "$errc854463e" >&2 &
(
cd /cromwell_root


set -euo pipefail
tar -xzvf /cromwell_root/talkowski-sv-gnomad-cromwell-execution/Module07MinGQ/ea2f86e5-d666-49df-b4e5-bd2d0353f500/call-GatherTrioData_PCRMINUS/attempt-3/CHD_SV_fdr1perc_pcr_minus.PCRMINUS.tar.gz
find -name "trio_variant_info.txt.gz" > trio_dat_list.txt
#Iterate over families and process them one at a time
while read famdat; do
  #Subset to variants matching condition
  /opt/sv-pipeline/scripts/downstream_analysis_and_filtering/subset_minGQ_trio_data.R \
    --min.size "5000" \
    --max.size "400000000" \
    --min.freq "0.01" \
    --max.freq "0.1" \
    --svtype.include "INS" \
    --svtype.exclude "None" \
    --filter.include "HIGH_SR_BACKGROUND" \
    --filter.exclude "PESR_GT_OVERDISPERSION" \
    --ev.include "None" \
    --ev.exclude "None" \
    --max.variants "1000" \
    "$famdat" /dev/stdout
done < trio_dat_list.txt \
| gzip -c \
> "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.trio_variants.txt.gz"
#Compute median # of filtered calls per trio
if [ $( zcat "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.trio_variants.txt.gz" | wc -l ) -gt 0 ]; then
  /opt/sv-pipeline/scripts/downstream_analysis_and_filtering/helper_median_counts_per_trio.R \
    --ID "minGQ_condition_1446" \
    "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.trio_variants.txt.gz" \
    "/cromwell_root/talkowski-sv-gnomad-cromwell-execution/Module07MinGQ/ea2f86e5-d666-49df-b4e5-bd2d0353f500/call-SplitFamfile_PCRMINUS/CHD_SV_fdr1perc_pcr_minus.PCRMINUS.cleaned_trios.fam" \
    "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.perTrio_distrib_stats.txt"
  med=$( fgrep -v "#" "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.perTrio_distrib_stats.txt" | cut -f2 )
else
  echo -e "#condition\thetsPerProband_median\thetsPerProband_Q1\thetsPerProband_Q2\nminGQ_condition_1446\t0\t0\t0" \
  > "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.perTrio_distrib_stats.txt"
  med=0
fi
#Run ROC if enough variants per proband
echo -e "FINISHED FILTERING. FOUND $med MEDIAN QUALIFYING VARIANTS PER CHILD."
if [ "$med" -gt 10 ]; then
  echo -e "STARTING ROC OPTIMIZATION."
  /opt/sv-pipeline/scripts/downstream_analysis_and_filtering/optimize_minGQ_ROC_v2.R \
    --prefix "minGQ_condition_1446" \
    --fdr "0.01" \
    --minGQ "0" \
    --maxGQ "999" \
    --step "5" \
    "CHD_SV_fdr1perc_pcr_minus.PCRMINUS.minGQ_condition_1446.trio_variants.txt.gz" \
    "/cromwell_root/talkowski-sv-gnomad-cromwell-execution/Module07MinGQ/ea2f86e5-d666-49df-b4e5-bd2d0353f500/call-SplitFamfile_PCRMINUS/CHD_SV_fdr1perc_pcr_minus.PCRMINUS.cleaned_trios.fam" \
    "./"
  gzip "minGQ_condition_1446.minGQ_ROC.data.txt"
else
  echo -e "TOO FEW VARIANTS FOR ROC OPTIMIZATION."
  touch "minGQ_condition_1446.minGQ_ROC.data.txt.gz"
  touch "minGQ_condition_1446.minGQ_ROC.optimal.txt"
  touch "minGQ_condition_1446.minGQ_ROC.plot.pdf"
fi
)  > "$outc854463e" 2> "$errc854463e"
echo $? > /cromwell_root/rc.tmp
(
# add a .file in every empty directory to facilitate directory delocalization on the cloud
cd /cromwell_root
find . -type d -exec sh -c '[ -z "$(ls -A '"'"'{}'"'"')" ] && touch '"'"'{}'"'"'/.file' \;
)
(
cd /cromwell_root
sync


)
mv /cromwell_root/rc.tmp /cromwell_root/rc
